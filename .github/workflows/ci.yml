name: CI

on:
  release:
    types: [created]
  push:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install latest nightly Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Lint with rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt

      - name: Lint with clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features

      - name: Test with cargo
        uses: actions-rs/cargo@v1
        with:
          command: test
          toolchain: nightly

  build:
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, '3.10']
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: Gr1N/setup-poetry@v7

      - name: Install latest stable Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Maturin
        run: |
          poetry run pip install -U pip wheel
          poetry run pip install maturin pytest

      - name: Build Python package
        run: poetry run maturin develop --release

      - name: pytest
        run: poetry run pytest

      - name: Build production Python packages
        run: poetry run maturin build --release

      - name: Archive wheel files
        uses: actions/upload-artifact@v2
        with:
          name: Built Wheels
          path: target/wheels/*.whl
